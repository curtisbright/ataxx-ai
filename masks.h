#ifdef __LP64__
	typedef long longint;
	#define STARTBOARD  0b1000000000000000000000000000000000000000000000001l
	#define STARTACTIVE 0b1000001000000000000000000000000000000000001000001l
	#define FULLBOARD   0b1111111111111111111111111111111111111111111111111l

	const long mask[49] = {
	0x00000000000001l,
	0x00000000000002l,
	0x00000000000004l,
	0x00000000000008l,
	0x00000000000010l,
	0x00000000000020l,
	0x00000000000040l,
	0x00000000000080l,
	0x00000000000100l,
	0x00000000000200l,
	0x00000000000400l,
	0x00000000000800l,
	0x00000000001000l,
	0x00000000002000l,
	0x00000000004000l,
	0x00000000008000l,
	0x00000000010000l,
	0x00000000020000l,
	0x00000000040000l,
	0x00000000080000l,
	0x00000000100000l,
	0x00000000200000l,
	0x00000000400000l,
	0x00000000800000l,
	0x00000001000000l,
	0x00000002000000l,
	0x00000004000000l,
	0x00000008000000l,
	0x00000010000000l,
	0x00000020000000l,
	0x00000040000000l,
	0x00000080000000l,
	0x00000100000000l,
	0x00000200000000l,
	0x00000400000000l,
	0x00000800000000l,
	0x00001000000000l,
	0x00002000000000l,
	0x00004000000000l,
	0x00008000000000l,
	0x00010000000000l,
	0x00020000000000l,
	0x00040000000000l,
	0x00080000000000l,
	0x00100000000000l,
	0x00200000000000l,
	0x00400000000000l,
	0x00800000000000l,
	0x01000000000000l
	};

	const long clonemask[49] = {
	0x00000000000182l,
	0x00000000000385l,
	0x0000000000070Al,
	0x00000000000E14l,
	0x00000000001C28l,
	0x00000000003850l,
	0x00000000003020l,
	0x0000000000C103l,
	0x0000000001C287l,
	0x0000000003850El,
	0x00000000070A1Cl,
	0x000000000E1438l,
	0x000000001C2870l,
	0x00000000181060l,
	0x00000000608180l,
	0x00000000E14380l,
	0x00000001C28700l,
	0x00000003850E00l,
	0x000000070A1C00l,
	0x0000000E143800l,
	0x0000000C083000l,
	0x0000003040C000l,
	0x00000070A1C000l,
	0x000000E1438000l,
	0x000001C2870000l,
	0x000003850E0000l,
	0x0000070A1C0000l,
	0x00000604180000l,
	0x00001820600000l,
	0x00003850E00000l,
	0x000070A1C00000l,
	0x0000E143800000l,
	0x0001C287000000l,
	0x0003850E000000l,
	0x0003020C000000l,
	0x000C1030000000l,
	0x001C2870000000l,
	0x003850E0000000l,
	0x0070A1C0000000l,
	0x00E14380000000l,
	0x01C28700000000l,
	0x01810600000000l,
	0x00081800000000l,
	0x00143800000000l,
	0x00287000000000l,
	0x0050E000000000l,
	0x00A1C000000000l,
	0x01438000000000l,
	0x00830000000000l
	};

	const long jumpmask[49] = {
	0x0000000001C204l,
	0x0000000003C408l,
	0x0000000007C891l,
	0x000000000F9122l,
	0x000000001F2244l,
	0x000000001E0408l,
	0x000000001C0810l,
	0x00000000E10204l,
	0x00000001E20408l,
	0x00000003E44891l,
	0x00000007C89122l,
	0x0000000F912244l,
	0x0000000F020408l,
	0x0000000E040810l,
	0x00000070810207l,
	0x000000F102040Fl,
	0x000001F224489Fl,
	0x000003E448913El,
	0x000007C891227Cl,
	0x00000781020478l,
	0x00000702040870l,
	0x00003840810380l,
	0x00007881020780l,
	0x0000F912244F80l,
	0x0001F224489F00l,
	0x0003E448913E00l,
	0x0003C081023C00l,
	0x00038102043800l,
	0x001C204081C000l,
	0x003C408103C000l,
	0x007C891227C000l,
	0x00F912244F8000l,
	0x01F224489F0000l,
	0x01E040811E0000l,
	0x01C081021C0000l,
	0x00102040E00000l,
	0x00204081E00000l,
	0x00448913E00000l,
	0x00891227C00000l,
	0x0112244F800000l,
	0x0020408F000000l,
	0x0040810E000000l,
	0x00102070000000l,
	0x002040F0000000l,
	0x004489F0000000l,
	0x008913E0000000l,
	0x011227C0000000l,
	0x00204780000000l,
	0x00408700000000l
	};
#else
	typedef long long longint;
	#define STARTBOARD  0x1000000000001ll
	#define STARTACTIVE 0x1040000000041ll
	#define FULLBOARD   0x1FFFFFFFFFFFFll

	const long long mask[49] = {
	0x00000000000001ll,
	0x00000000000002ll,
	0x00000000000004ll,
	0x00000000000008ll,
	0x00000000000010ll,
	0x00000000000020ll,
	0x00000000000040ll,
	0x00000000000080ll,
	0x00000000000100ll,
	0x00000000000200ll,
	0x00000000000400ll,
	0x00000000000800ll,
	0x00000000001000ll,
	0x00000000002000ll,
	0x00000000004000ll,
	0x00000000008000ll,
	0x00000000010000ll,
	0x00000000020000ll,
	0x00000000040000ll,
	0x00000000080000ll,
	0x00000000100000ll,
	0x00000000200000ll,
	0x00000000400000ll,
	0x00000000800000ll,
	0x00000001000000ll,
	0x00000002000000ll,
	0x00000004000000ll,
	0x00000008000000ll,
	0x00000010000000ll,
	0x00000020000000ll,
	0x00000040000000ll,
	0x00000080000000ll,
	0x00000100000000ll,
	0x00000200000000ll,
	0x00000400000000ll,
	0x00000800000000ll,
	0x00001000000000ll,
	0x00002000000000ll,
	0x00004000000000ll,
	0x00008000000000ll,
	0x00010000000000ll,
	0x00020000000000ll,
	0x00040000000000ll,
	0x00080000000000ll,
	0x00100000000000ll,
	0x00200000000000ll,
	0x00400000000000ll,
	0x00800000000000ll,
	0x01000000000000ll
	};

	const long long clonemask[49] = {
	0x00000000000182ll,
	0x00000000000385ll,
	0x0000000000070All,
	0x00000000000E14ll,
	0x00000000001C28ll,
	0x00000000003850ll,
	0x00000000003020ll,
	0x0000000000C103ll,
	0x0000000001C287ll,
	0x0000000003850Ell,
	0x00000000070A1Cll,
	0x000000000E1438ll,
	0x000000001C2870ll,
	0x00000000181060ll,
	0x00000000608180ll,
	0x00000000E14380ll,
	0x00000001C28700ll,
	0x00000003850E00ll,
	0x000000070A1C00ll,
	0x0000000E143800ll,
	0x0000000C083000ll,
	0x0000003040C000ll,
	0x00000070A1C000ll,
	0x000000E1438000ll,
	0x000001C2870000ll,
	0x000003850E0000ll,
	0x0000070A1C0000ll,
	0x00000604180000ll,
	0x00001820600000ll,
	0x00003850E00000ll,
	0x000070A1C00000ll,
	0x0000E143800000ll,
	0x0001C287000000ll,
	0x0003850E000000ll,
	0x0003020C000000ll,
	0x000C1030000000ll,
	0x001C2870000000ll,
	0x003850E0000000ll,
	0x0070A1C0000000ll,
	0x00E14380000000ll,
	0x01C28700000000ll,
	0x01810600000000ll,
	0x00081800000000ll,
	0x00143800000000ll,
	0x00287000000000ll,
	0x0050E000000000ll,
	0x00A1C000000000ll,
	0x01438000000000ll,
	0x00830000000000ll
	};

	const long long jumpmask[49] = {
	0x0000000001C204ll,
	0x0000000003C408ll,
	0x0000000007C891ll,
	0x000000000F9122ll,
	0x000000001F2244ll,
	0x000000001E0408ll,
	0x000000001C0810ll,
	0x00000000E10204ll,
	0x00000001E20408ll,
	0x00000003E44891ll,
	0x00000007C89122ll,
	0x0000000F912244ll,
	0x0000000F020408ll,
	0x0000000E040810ll,
	0x00000070810207ll,
	0x000000F102040Fll,
	0x000001F224489Fll,
	0x000003E448913Ell,
	0x000007C891227Cll,
	0x00000781020478ll,
	0x00000702040870ll,
	0x00003840810380ll,
	0x00007881020780ll,
	0x0000F912244F80ll,
	0x0001F224489F00ll,
	0x0003E448913E00ll,
	0x0003C081023C00ll,
	0x00038102043800ll,
	0x001C204081C000ll,
	0x003C408103C000ll,
	0x007C891227C000ll,
	0x00F912244F8000ll,
	0x01F224489F0000ll,
	0x01E040811E0000ll,
	0x01C081021C0000ll,
	0x00102040E00000ll,
	0x00204081E00000ll,
	0x00448913E00000ll,
	0x00891227C00000ll,
	0x0112244F800000ll,
	0x0020408F000000ll,
	0x0040810E000000ll,
	0x00102070000000ll,
	0x002040F0000000ll,
	0x004489F0000000ll,
	0x008913E0000000ll,
	0x011227C0000000ll,
	0x00204780000000ll,
	0x00408700000000ll
	};
#endif

// Integer Base 2 Logarithm
int ilog2(longint n)
{	int k = 0;
	if(n>>32)
	{	k += 32;
		n >>= 32;
	}
	if(n>>16)
	{	k += 16;
		n >>= 16;
	}
	if(n>>8)
	{	k += 8;
		n >>= 8;
	}
	if(n>>4)
	{	k += 4;
		n >>= 4;
	}
	if(n>>2)
	{	k += 2;
		n >>= 2;
	}
	if(n>>1)
	{	k += 1;
		n >>= 1;
	}
	return k;
}
